/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/service-providers/{service_provider_id}/legal-document-types": {
    /** Retrieves all legal document types of a Service provider. */
    get: operations["get_legal_document_types_service_providers__service_provider_id__legal_document_types_get"];
    /** Creates an empty, non-finished legal document type, returns its ID. */
    post: operations["create_legal_document_type_service_providers__service_provider_id__legal_document_types_post"];
  };
  "/service-providers/{service_provider_id}/legal-document-types/{legal_document_type_id}": {
    /** Retrieves a legal document type */
    get: operations["get_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__get"];
    /** Delete legal document. */
    delete: operations["delete_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__delete"];
    /** Finishes the creation of a legal document type if initial_setup is True, otherwise updates it. */
    patch: operations["update_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__patch"];
  };
  "/service-providers/{service_provider_id}/legal-document-types/{legal_document_type_id}/pdf": {
    /** Get PDF Pre Signed URL for a legal document type. */
    get: operations["get_legal_document_type_pdf_url_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_get"];
    /** Upload a PDF for a legal document type. */
    post: operations["upload_legal_document_type_pdf_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_post"];
  };
  "/service-providers/{service_provider_id}/agreement-types/{agreement_type_id}/legal-document-types": {
    /** List all Legal Document Types for an Agreement Type */
    get: operations["get_legal_document_types_for_agreement_type_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_get"];
    /** Add Legal Document Type to Agreement Type */
    post: operations["add_agreement_type_to_legal_document_types_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_post"];
    /** Update Agreement Type to Legal Document Type */
    patch: operations["update_agreement_type_to_legal_document_types_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_patch"];
  };
  "/service-providers/{service_provider_id}/agreement-types/{agreement_type_id}/legal-document-types/{legal_document_type_id}": {
    /** Delete Legal Document Type from Agreement Type */
    delete: operations["delete_agreement_type_to_legal_document_types_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types__legal_document_type_id__delete"];
  };
  "/service-providers/{service_provider_id}/legal-documents": {
    /** List all Legal Documents for a Service Provider */
    get: operations["get_legal_documents_for_service_provider_service_providers__service_provider_id__legal_documents_get"];
  };
  "/service-providers/{service_provider_id}/agreements/{agreement_id}/legal-documents": {
    /** List all Legal Documents for an Agreement */
    get: operations["get_legal_documents_for_agreement_service_providers__service_provider_id__agreements__agreement_id__legal_documents_get"];
  };
  "/service-consumers/{service_consumer_id}/signatures": {
    /** Create signature for legal documents */
    post: operations["create_signatures_service_consumers__service_consumer_id__signatures_post"];
  };
  "/service-consumers/{service_consumer_id}/legal-document-types/{legal_document_type_id}/pdf": {
    /** Get PDF Pre Signed URL for a legal document type. */
    get: operations["get_legal_document_type_pdf_url_service_consumers__service_consumer_id__legal_document_types__legal_document_type_id__pdf_get"];
  };
  "/service-consumers/{service_consumer_id}/agreements/{agreement_id}/legal-documents": {
    /** List all Legal Documents for an Agreement with Service Consumer */
    get: operations["get_legal_documents_for_agreement_service_consumers__service_consumer_id__agreements__agreement_id__legal_documents_get"];
  };
  "/service-consumers/{service_consumer_id}/agreement-types/{agreement_type_id}/legal-document-types": {
    /** List all Legal Document Types for an Agreement Type of Service Consumer */
    get: operations["get_legal_document_types_for_agreement_type_with_sc_service_consumers__service_consumer_id__agreement_types__agreement_type_id__legal_document_types_get"];
  };
  "/unload/e2e": {
    /** Unload E2E */
    get: operations["unload_e2e_unload_e2e_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AgreementTypeToLegalDocumentTypeUpdate */
    AgreementTypeToLegalDocumentTypeUpdate: {
      /** Legal Document Type Ids */
      legal_document_type_ids: string[];
    };
    /** Body_update_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__patch */
    Body_update_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__patch: {
      legal_document_type_create?: components["schemas"]["LegalDocumentTypeCreate"] | null;
      legal_document_type_update?: components["schemas"]["LegalDocumentTypeUpdate"] | null;
    };
    /** Body_upload_legal_document_type_pdf_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_post */
    Body_upload_legal_document_type_pdf_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_post: {
      /**
       * Pdf
       * Format: binary
       * @description PDF File to Upload
       */
      pdf: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** LegalDocumentRead */
    LegalDocumentRead: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Service Consumer Id */
      service_consumer_id?: string | null;
      /** Service Provider Id */
      service_provider_id?: string | null;
      /**
       * Legal Document Type
       * Format: uuid
       */
      legal_document_type: string;
      /** Pdf Filename */
      pdf_filename?: string | null;
      /**
       * Date Created
       * Format: date-time
       */
      date_created: string;
      /** Name */
      name?: string | null;
    };
    /** LegalDocumentTypeCreate */
    LegalDocumentTypeCreate: {
      /** Name */
      name: string;
      /** External Facing Name */
      external_facing_name?: string | null;
      /** Description */
      description?: string | null;
      text_source: components["schemas"]["TextSourceOption"];
      /** Signature Required From Sc */
      signature_required_from_SC: boolean;
      /** Signature Required From Sp */
      signature_required_from_SP: boolean;
      /** Signature Required From End User */
      signature_required_from_end_user: boolean;
      /** Version Reference */
      version_reference?: string | null;
    };
    /** LegalDocumentTypeIdAndSP */
    LegalDocumentTypeIdAndSP: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Service Provider Id
       * Format: uuid
       */
      service_provider_id: string;
    };
    /** LegalDocumentTypePdfPreSignUrl */
    LegalDocumentTypePdfPreSignUrl: {
      /** Pdf Url */
      pdf_url: string;
    };
    /** LegalDocumentTypeRead */
    LegalDocumentTypeRead: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /**
       * Service Provider Id
       * Format: uuid
       */
      service_provider_id: string;
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
      text_source: components["schemas"]["TextSourceOption"];
      /** Signature Required From Sc */
      signature_required_from_SC: boolean;
      /** Signature Required From Sp */
      signature_required_from_SP: boolean;
      /** Signature Required From End User */
      signature_required_from_end_user: boolean;
      /** Version Reference */
      version_reference?: string | null;
      /** Finished Create */
      finished_create: boolean;
      /** Legal Document Count */
      legal_document_count?: number | null;
      /** Pdf Filename */
      pdf_filename?: string | null;
      /** Pdf Size */
      pdf_size?: number | null;
      /** In Use */
      in_use: boolean;
      /** Agreement Type Ids */
      agreement_type_ids?: string[] | null;
      /** External Facing Name */
      external_facing_name: string;
    };
    /** LegalDocumentTypeUpdate */
    LegalDocumentTypeUpdate: {
      /** Name */
      name?: string | null;
      /** External Facing Name */
      external_facing_name?: string | null;
      /** Description */
      description?: string | null;
      text_source?: components["schemas"]["TextSourceOption"] | null;
      /** Signature Required From Sc */
      signature_required_from_SC?: boolean | null;
      /** Signature Required From Sp */
      signature_required_from_SP?: boolean | null;
      /** Signature Required From End User */
      signature_required_from_end_user?: boolean | null;
      /** Version Reference */
      version_reference?: string | null;
    };
    /** LegalDocumentTypeWithLegalDocumentRead */
    LegalDocumentTypeWithLegalDocumentRead: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
      /** Legal Documents */
      legal_documents: components["schemas"]["LegalDocumentRead"][];
    };
    /** LegalDocumentTypeWithPdfSyncStatusRead */
    LegalDocumentTypeWithPdfSyncStatusRead: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
      pdf_sync_status?: components["schemas"]["SyncStatus"] | null;
    };
    /** PaginationSchema[LegalDocumentRead] */
    PaginationSchema_LegalDocumentRead_: {
      /** Offset */
      offset: number;
      /** Limit */
      limit: number;
      /** Results */
      results: components["schemas"]["LegalDocumentRead"][];
      /** Size */
      size: number;
      /** Total */
      total?: number | null;
    };
    /** PaginationSchema[LegalDocumentTypeRead] */
    PaginationSchema_LegalDocumentTypeRead_: {
      /** Offset */
      offset: number;
      /** Limit */
      limit: number;
      /** Results */
      results: components["schemas"]["LegalDocumentTypeRead"][];
      /** Size */
      size: number;
      /** Total */
      total?: number | null;
    };
    /** PaginationSchema[LegalDocumentTypeWithLegalDocumentRead] */
    PaginationSchema_LegalDocumentTypeWithLegalDocumentRead_: {
      /** Offset */
      offset: number;
      /** Limit */
      limit: number;
      /** Results */
      results: components["schemas"]["LegalDocumentTypeWithLegalDocumentRead"][];
      /** Size */
      size: number;
      /** Total */
      total?: number | null;
    };
    /** PaginationSchema[LegalDocumentTypeWithPdfSyncStatusRead] */
    PaginationSchema_LegalDocumentTypeWithPdfSyncStatusRead_: {
      /** Offset */
      offset: number;
      /** Limit */
      limit: number;
      /** Results */
      results: components["schemas"]["LegalDocumentTypeWithPdfSyncStatusRead"][];
      /** Size */
      size: number;
      /** Total */
      total?: number | null;
    };
    /** PaginationSchema[SPLegalDocumentRead] */
    PaginationSchema_SPLegalDocumentRead_: {
      /** Offset */
      offset: number;
      /** Limit */
      limit: number;
      /** Results */
      results: components["schemas"]["SPLegalDocumentRead"][];
      /** Size */
      size: number;
      /** Total */
      total?: number | null;
    };
    /** SPLegalDocumentRead */
    SPLegalDocumentRead: {
      /**
       * Id
       * Format: uuid
       */
      id: string;
      /** Service Consumer Id */
      service_consumer_id?: string | null;
      /** Service Provider Id */
      service_provider_id?: string | null;
      /**
       * Legal Document Type
       * Format: uuid
       */
      legal_document_type: string;
      /** Pdf Filename */
      pdf_filename?: string | null;
      /**
       * Date Created
       * Format: date-time
       */
      date_created: string;
      /** Name */
      name?: string | null;
      /** External Facing Name */
      external_facing_name: string;
    };
    /** SignatureCreate */
    SignatureCreate: {
      /** Legal Document Ids */
      legal_document_ids: string[];
    };
    /**
     * SyncStatus
     * @enum {string}
     */
    SyncStatus: "P" | "S" | "F" | "PENDING" | "SUCCESS" | "FAILURE";
    /**
     * TextSourceOption
     * @enum {string}
     */
    TextSourceOption: "pdf" | "url" | "text";
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Retrieves all legal document types of a Service provider. */
  get_legal_document_types_service_providers__service_provider_id__legal_document_types_get: {
    parameters: {
      query?: {
        /** @description Legal Document Types Offset */
        offset?: number;
        /** @description Max number of Legal Document Types */
        limit?: number;
        /** @description ID of the Agreement Type */
        agreement_type_id?: string | null;
        /** @description Search in Legal Document Types using fields (name, ) */
        query?: string | null;
        /** @description Attribute used to sort the Legal Document Types: ['name'] */
        sort?: string | null;
      };
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
      };
    };
    responses: {
      /** @description List of Legal Document Types */
      200: {
        content: {
          "application/json": components["schemas"]["PaginationSchema_LegalDocumentTypeRead_"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Creates an empty, non-finished legal document type, returns its ID. */
  create_legal_document_type_service_providers__service_provider_id__legal_document_types_post: {
    parameters: {
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
      };
    };
    responses: {
      /** @description Legal Document Type Created */
      201: {
        content: {
          "application/json": components["schemas"]["LegalDocumentTypeIdAndSP"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Retrieves a legal document type */
  get_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__get: {
    parameters: {
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Legal Document Type */
        legal_document_type_id: string;
      };
    };
    responses: {
      /** @description Legal Document Type */
      200: {
        content: {
          "application/json": components["schemas"]["LegalDocumentTypeRead"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Type not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete legal document. */
  delete_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__delete: {
    parameters: {
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Legal Document Type */
        legal_document_type_id: string;
      };
    };
    responses: {
      /** @description Legal Document Type Deleted */
      204: {
        content: never;
      };
      /** @description Legal Document Type has Legal Document */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Type not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Finishes the creation of a legal document type if initial_setup is True, otherwise updates it. */
  update_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__patch: {
    parameters: {
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Legal Document Type */
        legal_document_type_id: string;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Body_update_legal_document_type_service_providers__service_provider_id__legal_document_types__legal_document_type_id__patch"];
      };
    };
    responses: {
      /** @description Legal Document Type Finished Create or Updated */
      200: {
        content: {
          "application/json": components["schemas"]["LegalDocumentTypeRead"];
        };
      };
      /** @description Invalid initial_setup flag or Legal Document Type has Legal Document */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Type not found */
      404: {
        content: never;
      };
      /** @description Legal Document Type with the same name already exists for this Service Provider */
      409: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get PDF Pre Signed URL for a legal document type. */
  get_legal_document_type_pdf_url_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_get: {
    parameters: {
      path: {
        /** @description ID of the Legal Document Type */
        legal_document_type_id: string;
        /** @description ID of the Service Provider */
        service_provider_id: string;
      };
    };
    responses: {
      /** @description Legal Document Type PDF Pre Signed URL retrieved */
      200: {
        content: {
          "application/json": components["schemas"]["LegalDocumentTypePdfPreSignUrl"];
        };
      };
      /** @description Invalid Text Source or PDF Sync Status */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Type Not Found for Service Provider */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
      /** @description AWS S3 Service Exception */
      503: {
        content: never;
      };
    };
  };
  /** Upload a PDF for a legal document type. */
  upload_legal_document_type_pdf_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_post: {
    parameters: {
      path: {
        /** @description ID of the Legal Document Type */
        legal_document_type_id: string;
        /** @description ID of the Service Provider */
        service_provider_id: string;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_legal_document_type_pdf_service_providers__service_provider_id__legal_document_types__legal_document_type_id__pdf_post"];
      };
    };
    responses: {
      /** @description Legal Document Type PDF Uploaded */
      201: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Invalid File Type, Text Source or Size */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Type Not Found for Service Provider */
      404: {
        content: never;
      };
      /** @description Legal Document Type PDF Upload Already in Progress */
      409: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List all Legal Document Types for an Agreement Type */
  get_legal_document_types_for_agreement_type_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_get: {
    parameters: {
      query?: {
        /** @description Offset */
        offset?: number;
        /** @description Max number of Legal Document Types */
        limit?: number;
        /** @description A search query is used to search legal document types using (name, description) */
        query?: string | null;
        /** @description Attribute used to sort the Legal Document Types: ['finished_create', 'text_source', 'name', 'signature_required_from_SC', 'signature_required_from_SP', 'signature_required_from_end_user', 'service_provider_id', 'version_reference', 'pdf_sync_status', 'pdf_filename', 'pdf_size'] */
        sort?: string | null;
      };
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Agreement Type */
        agreement_type_id: string;
      };
    };
    responses: {
      /** @description Legal Document Types for Agreement Type */
      200: {
        content: {
          "application/json": components["schemas"]["PaginationSchema_LegalDocumentTypeWithPdfSyncStatusRead_"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Types for Agreement Type not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Legal Document Type to Agreement Type */
  add_agreement_type_to_legal_document_types_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_post: {
    parameters: {
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Agreement Type */
        agreement_type_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeToLegalDocumentTypeUpdate"];
      };
    };
    responses: {
      /** @description Agreement Type to Legal Document Type Updated */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Agreement Type or Legal Document Type not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Agreement Type to Legal Document Type */
  update_agreement_type_to_legal_document_types_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types_patch: {
    parameters: {
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Agreement Type */
        agreement_type_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeToLegalDocumentTypeUpdate"];
      };
    };
    responses: {
      /** @description Agreement Type to Legal Document Type Updated */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Agreement Type to Legal Document Type not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Legal Document Type from Agreement Type */
  delete_agreement_type_to_legal_document_types_service_providers__service_provider_id__agreement_types__agreement_type_id__legal_document_types__legal_document_type_id__delete: {
    parameters: {
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Agreement Type */
        agreement_type_id: string;
        /** @description ID of the Legal Document Type */
        legal_document_type_id: string;
      };
    };
    responses: {
      /** @description Agreement Type to Legal Document Type Removed */
      200: {
        content: never;
      };
      /** @description Successful Response */
      204: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Agreement Type or Legal Document Type not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List all Legal Documents for a Service Provider */
  get_legal_documents_for_service_provider_service_providers__service_provider_id__legal_documents_get: {
    parameters: {
      query?: {
        /** @description ID of the Service Consumer */
        service_consumer_id?: string | null;
        /** @description Legal Document Offset */
        offset?: number;
        /** @description Max number of Legal Documents */
        limit?: number;
        /** @description A search query is used to search legal documents using (legal_document_type_name, legal_document_type_description) */
        query?: string | null;
        /** @description Attribute used to sort the Legal Documents: ['legal_document.signed_date', 'legal_document.legal_document_type'] */
        sort?: string | null;
      };
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
      };
    };
    responses: {
      /** @description Legal Documents */
      200: {
        content: {
          "application/json": components["schemas"]["PaginationSchema_SPLegalDocumentRead_"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List all Legal Documents for an Agreement */
  get_legal_documents_for_agreement_service_providers__service_provider_id__agreements__agreement_id__legal_documents_get: {
    parameters: {
      query?: {
        /** @description Filter Legal document that needs to be signed */
        fully_signed?: boolean | null;
      };
      path: {
        /** @description ID of the Service Provider */
        service_provider_id: string;
        /** @description ID of the Agreement */
        agreement_id: string;
      };
    };
    responses: {
      /** @description Legal Documents for Agreement */
      200: {
        content: {
          "application/json": components["schemas"]["PaginationSchema_LegalDocumentRead_"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Documents for Agreement not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create signature for legal documents */
  create_signatures_service_consumers__service_consumer_id__signatures_post: {
    parameters: {
      path: {
        /** @description ID of the Service Consumer */
        service_consumer_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignatureCreate"];
      };
    };
    responses: {
      /** @description Signature Created */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document ID not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get PDF Pre Signed URL for a legal document type. */
  get_legal_document_type_pdf_url_service_consumers__service_consumer_id__legal_document_types__legal_document_type_id__pdf_get: {
    parameters: {
      path: {
        /** @description ID of the Legal Document Type */
        legal_document_type_id: string;
        /** @description ID of the Service Consumer */
        service_consumer_id: string;
      };
    };
    responses: {
      /** @description Legal Document Type PDF Pre Signed URL retrieved */
      200: {
        content: {
          "application/json": components["schemas"]["LegalDocumentTypePdfPreSignUrl"];
        };
      };
      /** @description Invalid Text Source or PDF Sync Status */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Type Not Found for Service Provider */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
      /** @description AWS S3 Service Exception */
      503: {
        content: never;
      };
    };
  };
  /** List all Legal Documents for an Agreement with Service Consumer */
  get_legal_documents_for_agreement_service_consumers__service_consumer_id__agreements__agreement_id__legal_documents_get: {
    parameters: {
      query?: {
        /** @description Filter Legal document that needs to be signed */
        fully_signed?: boolean | null;
      };
      path: {
        /** @description ID of the Service Consumer */
        service_consumer_id: string;
        /** @description ID of the Agreement */
        agreement_id: string;
      };
    };
    responses: {
      /** @description Legal Documents for Agreement */
      200: {
        content: {
          "application/json": components["schemas"]["PaginationSchema_LegalDocumentRead_"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Documents for Agreement not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List all Legal Document Types for an Agreement Type of Service Consumer */
  get_legal_document_types_for_agreement_type_with_sc_service_consumers__service_consumer_id__agreement_types__agreement_type_id__legal_document_types_get: {
    parameters: {
      query?: {
        /** @description Legal Document Offset */
        offset?: number;
        /** @description Max number of Legal Documents */
        limit?: number;
      };
      path: {
        /** @description ID of the Service Consumer */
        service_consumer_id: string;
        /** @description ID of the Agreement Type */
        agreement_type_id: string;
      };
    };
    responses: {
      /** @description Legal Document Types for Agreement Type */
      200: {
        content: {
          "application/json": components["schemas"]["PaginationSchema_LegalDocumentTypeWithLegalDocumentRead_"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Legal Document Types for Agreement Type not found */
      404: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Unload E2E */
  unload_e2e_unload_e2e_get: {
    responses: {
      /** @description Successful Response */
      204: {
        content: never;
      };
    };
  };
}
